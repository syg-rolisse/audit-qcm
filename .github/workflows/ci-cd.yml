name: Audit-Qcm CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout du code
        uses: actions/checkout@v4

      - name: üì¶ Installation de Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

  deploy-apis:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout du code
        uses: actions/checkout@v4

      # Cache des d√©pendances Backend
      - name: üöö Restaurer le cache des d√©pendances Backend
        uses: actions/cache@v3
        with:
          path: ./apis/node_modules
          key: ${{ runner.os }}-backend-node-modules-${{ hashFiles('**/apis/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-modules-

      - name: üì¶ Installer les d√©pendances Backend
        working-directory: ./apis
        run: npm install

        # Connexion au VPS et pr√©paration du r√©pertoire
      - name: üîë Connexion au VPS et pr√©paration du r√©pertoire
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            mkdir -p /opt/audit-qcm/apis/
            cd /opt/audit-qcm/apis
            touch .env
            echo ".env ajout√©"
            echo "R√©pertoire /opt/audit-qcm/apis/ pr√™t"

      # Copier les fichiers du Backend vers le VPS (structure respect√©e)
      - name: üì§ Copier les fichiers Backend sur le VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "apis/*"
          target: /opt/audit-qcm/apis/
          strip_components: 1

      - name: Copier le fichier .env sur le VPS
        uses: appleboy/scp-action@v0.1.7
        with:
            host: ${{ secrets.VPS_IP }}
            username: ${{ secrets.VPS_USER }}
            password: ${{ secrets.PASSWORD }}
            port: ${{ secrets.PORT }}
            source: ".apis/.env"
            target: "/opt/audit-qcm/apis/"
   
  deploy-apps:
    needs: deploy-apis
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout du code
        uses: actions/checkout@v4

      # Cache des d√©pendances Frontend
      - name: üöö Restaurer le cache des d√©pendances Frontend
        uses: actions/cache@v3
        with:
          path: ./apps/node_modules
          key: ${{ runner.os }}-frontend-node-modules-${{ hashFiles('**/apps/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-modules-

      - name: üì¶ Installer les d√©pendances Frontend
        working-directory: ./apps
        run: npm install

      - name: üöÄ Build de l'application Frontend
        working-directory: ./apps
        run: npm run build

        # Connexion au VPS et pr√©paration du r√©pertoire
      - name: üîë Connexion au VPS et pr√©paration du r√©pertoire
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }}/opt
            sudo mkdir -p /opt/audit-qcm
            cd /opt/audit-qcm/apps
            touch .env
            echo ".env ajout√©"
            echo "R√©pertoire /opt/audit-qcm pr√™t"

      # Copier les fichiers du Frontend vers le VPS
      - name: Copy frontend files via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "apps/dist/*"
          target: /opt/audit-qcm/apps/

      # Copier le fichier docker-compose.yml sur le VPS
      - name: Copy docker-compose.yml via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yml"
          target: /opt/audit-qcm/

      - name: Copier le fichier .env sur le VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: ".apps/.env"
          target: "/opt/audit-qcm/apps/"

      # Lancer Docker Compose et d√©marrer les services sur le VPS
      - name: Deploy and start Docker services on VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /opt/audit-qcm
            docker-compose down || true
            docker-compose up --build -d
            docker image prune -f
            docker ps
